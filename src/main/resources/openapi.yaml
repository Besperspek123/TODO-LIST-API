openapi: 3.0.0
info:
    title: Task API
    version: 1.0.0
tags:
    - name: Tasks
      description: Operations related to tasks
    - name: Users
      description: Operations related to users
servers:
    - url: http://localhost:8080/api
paths:
    /tasks:
        post:
            tags:
                - Tasks
            summary: Create Task
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TaskCreateOrEditDTO'
            responses:
                '200':
                    description: Task created

    /tasks/executors/{taskID}:
        post:
            tags:
                - Tasks
            summary: Choose executor
            description: Set an executor for a task by providing either the user's ID or email.
            parameters:
                - name: taskID
                  in: path
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserDTO'
            responses:
                '200':
                    description: Executor has been set

        delete:
            tags:
                - Tasks
            summary: Remove executor
            parameters:
                - name: taskID
                  in: path
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserDTO'
            responses:
                '200':
                    description: Executor has been removed

    /tasks/status/{taskId}:
        put:
            tags:
                - Tasks
            summary: Swap status
            parameters:
                - name: taskId
                  in: path
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TaskStatusDTO'
            responses:
                '200':
                    description: Status has been changed

    /tasks/{taskID}:
        put:
            tags:
                - Tasks
            summary: Edit Task
            parameters:
                - name: taskID
                  in: path
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TaskCreateOrEditDTO'
            responses:
                '200':
                    description: Task edited
        delete:
            tags:
                - Tasks
            summary: Delete task
            parameters:
                - name: taskID
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                '200':
                    description: Task has been deleted
        get:
            tags:
                - Tasks
            summary: Get info about task
            parameters:
                - name: taskID
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                '200':
                    description: Information about the task
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TaskDetailsDTO'

    /tasks/comment/{taskID}:
        post:
            tags:
                - Tasks
            summary: Add comment to task
            parameters:
                - name: taskID
                  in: path
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CommentCreateDTO'
            responses:
                '200':
                    description: Comment has been added

    /tasks/executor:
        get:
            tags:
                - Tasks
            summary: Get tasks for current user where he is executor with pagination
            parameters:
                - name: page
                  in: query
                  required: false
                  schema:
                      type: integer
                      default: 0
                - name: size
                  in: query
                  required: false
                  schema:
                      type: integer
                      default: 10
            responses:
                '200':
                    description: Paginated list of tasks where the user is an executor
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageTaskDTO'
    /tasks/creator:
        get:
            tags:
                - Tasks
            summary: Get tasks for current user where he is creator with pagination
            parameters:
                - name: page
                  in: query
                  required: false
                  schema:
                      type: integer
                      default: 0
                - name: size
                  in: query
                  required: false
                  schema:
                      type: integer
                      default: 10
            responses:
                '200':
                    description: Paginated list of tasks where the current user is the creator
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageTaskDTO'

    /tasks/all:
        get:
            tags:
                - Tasks
            summary: Get all tasks for all users with pagination
            parameters:
                - name: page
                  in: query
                  required: false
                  schema:
                      type: integer
                      default: 0
                - name: size
                  in: query
                  required: false
                  schema:
                      type: integer
                      default: 10
            responses:
                '200':
                    description: Paginated list of all tasks for all users
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageTaskDTO'
    /users/{userID}:
        get:
            tags:
                - Users
            summary: Get info about User
            parameters:
                - name: userID
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                '200':
                    description: User information retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserDetailsDTO'
                '404':
                    description: User not found
components:
    schemas:
        TaskCreateOrEditDTO:
            type: object
            properties:
                title:
                    type: string
                    description: The title of the task
        UserDTO:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    description: ID of the user. Either 'id' or 'email' must be provided, not both.
                    example: 123
                email:
                    type: string
                    format: email
                    description: Email of the user. Either 'email' or 'id' must be provided, not both.
                    example: user@example.com
            required:
                - id
                - email
        TaskStatusDTO:
            type: object
            properties:
                status:
                    type: string
                    description: Status of the task
                    example: Waiting
                    enum:
                        - Waiting
                        - In process
                        - Finished
        CommentCreateDTO:
            type: object
            properties:
                message:
                    type: string
                    description: The message of the comment
        TaskDetailsDTO:
            type: object
            properties:
                creator:
                    $ref: '#/components/schemas/UserDTO'
                executors:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserDTO'
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/CommentDTO'
                title:
                    type: string
                    description: The title of the task
                status:
                    $ref: '#/components/schemas/TaskState'
        TaskDTO:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    description: The unique identifier of the task
                title:
                    type: string
                    description: The title of the task
                status:
                    $ref: '#/components/schemas/TaskState'
        TaskState:
            type: string
            enum:
                - Waiting
                - InProcess
                - Finished
            description: Current state of the task
        UserDetailsDTO:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    description: The unique identifier of the user
                email:
                    type: string
                    format: email
                    description: The email of the user
                createdTasks:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaskDTO'
                    description: A list of tasks created by the user
                executedTasks:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaskDTO'
                    description: A list of tasks executed by the user
                createdComments:
                    type: array
                    items:
                        $ref: '#/components/schemas/CommentDTO'
                    description: A list of comments created by the user
        CommentDTO:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    description: The unique identifier of the comment
                creatorID:
                    type: integer
                    format: int64
                    description: The ID of the creator of the comment
                message:
                    type: string
                    description: The message content of the comment
